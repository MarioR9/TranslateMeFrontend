{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/Profile.js\";\nimport React from 'react';\nimport Images from './Images';\nimport { Card } from 'semantic-ui-react';\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\nexport default class Profile extends React.Component {\n  //         fetch('http://localhost:3000/api/v1/users',{\n  //             method: \"POST\",\n  //             body: imageData\n  //            \t}).then(res=>res.json()).then(data => {\n  //   debugger\n  //                 this.handleFetchResponse(data)})\n  render() {\n    function showUploadWidget() {\n      cloudinary.openUploadWidget({\n        cloudName: \"<cloud name>\",\n        uploadPreset: \"<upload preset>\",\n        sources: [\"image_search\", \"camera\", \"local\", \"dropbox\"],\n        googleApiKey: \"<image_search_google_api_key>\",\n        showAdvancedOptions: false,\n        cropping: false,\n        multiple: false,\n        defaultSource: \"local\",\n        styles: {\n          palette: {\n            window: \"#F5F5F5\",\n            sourceBg: \"#FFFFFF\",\n            windowBorder: \"#90a0b3\",\n            tabIcon: \"#0094c7\",\n            inactiveTabIcon: \"#69778A\",\n            menuIcons: \"#0094C7\",\n            link: \"#53ad9d\",\n            action: \"#8F5DA5\",\n            inProgress: \"#0194c7\",\n            complete: \"#53ad9d\",\n            error: \"#c43737\",\n            textDark: \"#000000\",\n            textLight: \"#FFFFFF\"\n          },\n          fonts: {\n            default: null,\n            \"'IBM Plex Sans', sans-serif\": {\n              url: \"https://fonts.googleapis.com/css?family=IBM+Plex+Sans\",\n              active: true\n            }\n          }\n        }\n      }, (err, info) => {\n        if (!err) {\n          console.log(\"Upload Widget event - \", info);\n        }\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/Profile.js"],"names":["React","Images","Card","Image","Video","Transformation","CloudinaryContext","Profile","Component","render","showUploadWidget","cloudinary","openUploadWidget","cloudName","uploadPreset","sources","googleApiKey","showAdvancedOptions","cropping","multiple","defaultSource","styles","palette","window","sourceBg","windowBorder","tabIcon","inactiveTabIcon","menuIcons","link","action","inProgress","complete","error","textDark","textLight","fonts","default","url","active","err","info","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAAQC,KAAR,EAAeC,KAAf,EAAsBC,cAAtB,EAAsCC,iBAAtC,QAA8D,kBAA9D;AAEA,eAAe,MAAMC,OAAN,SAAsBP,KAAK,CAACQ,SAA5B,CAAqC;AAGpD;AACA;AACA;AACA;AACA;AACA;AAIIC,EAAAA,MAAM,GAAE;AACJ,aAASC,gBAAT,GAA4B;AACxBC,MAAAA,UAAU,CAACC,gBAAX,CAA4B;AACxBC,QAAAA,SAAS,EAAE,cADa;AAExBC,QAAAA,YAAY,EAAE,iBAFU;AAGvBC,QAAAA,OAAO,EAAE,CACA,cADA,EAGA,QAHA,EAKA,OALA,EAOA,SAPA,CAHc;AAYdC,QAAAA,YAAY,EAAE,+BAZA;AAadC,QAAAA,mBAAmB,EAAE,KAbP;AAcdC,QAAAA,QAAQ,EAAE,KAdI;AAedC,QAAAA,QAAQ,EAAE,KAfI;AAgBdC,QAAAA,aAAa,EAAE,OAhBD;AAiBdC,QAAAA,MAAM,EAAE;AAEJC,UAAAA,OAAO,EAAE;AAGTC,YAAAA,MAAM,EAAE,SAHC;AAIPC,YAAAA,QAAQ,EAAE,SAJH;AAKLC,YAAAA,YAAY,EAAE,SALT;AAMLC,YAAAA,OAAO,EAAE,SANJ;AAOLC,YAAAA,eAAe,EAAE,SAPZ;AAQLC,YAAAA,SAAS,EAAE,SARN;AASLC,YAAAA,IAAI,EAAE,SATD;AAULC,YAAAA,MAAM,EAAE,SAVH;AAWLC,YAAAA,UAAU,EAAE,SAXP;AAYLC,YAAAA,QAAQ,EAAE,SAZL;AAaLC,YAAAA,KAAK,EAAE,SAbF;AAawBC,YAAAA,QAAQ,EAAE,SAblC;AAawDC,YAAAA,SAAS,EAAE;AAbnE,WAFL;AAemGC,UAAAA,KAAK,EAAE;AAAaC,YAAAA,OAAO,EAAE,IAAtB;AAAuC,2CAA+B;AAAiBC,cAAAA,GAAG,EAAE,uDAAtB;AAA8FC,cAAAA,MAAM,EAAE;AAAtG;AAAtE;AAf1G;AAjBM,OAA5B,EAgC8U,CAACC,GAAD,EAAMC,IAAN,KAAe;AAAI,YAAI,CAACD,GAAL,EAAU;AAAUE,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,IAAtC;AAAgD;AAAG,OAhCxa;AAgC4a;;AAEhb,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AArD+C","sourcesContent":["import React from 'react'\nimport Images from './Images'\nimport { Card } from 'semantic-ui-react'\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\n\nexport default class Profile extends React.Component{\n   \n      \n//         fetch('http://localhost:3000/api/v1/users',{\n//             method: \"POST\",\n//             body: imageData\n//            \t}).then(res=>res.json()).then(data => {\n//   debugger\n//                 this.handleFetchResponse(data)})\n            \n\n\n    render(){\n        function showUploadWidget() { \n            cloudinary.openUploadWidget({    \n                cloudName: \"<cloud name>\",    \n                uploadPreset: \"<upload preset>\", \n                 sources: [\n                          \"image_search\",\n                          \n                          \"camera\",\n                          \n                          \"local\",\n                          \n                          \"dropbox\"\n                        ],\n                          googleApiKey: \"<image_search_google_api_key>\",\n                          showAdvancedOptions: false,\n                          cropping: false,\n                          multiple: false,\n                          defaultSource: \"local\",\n                          styles: {\n                              \n                              palette: {\n                              \n                              \n                              window: \"#F5F5F5\",  \n                                sourceBg: \"#FFFFFF\",\n                                  windowBorder: \"#90a0b3\",\n                                  tabIcon: \"#0094c7\",\n                                  inactiveTabIcon: \"#69778A\",\n                                  menuIcons: \"#0094C7\",\n                                  link: \"#53ad9d\",\n                                  action: \"#8F5DA5\",\n                                  inProgress: \"#0194c7\",\n                                  complete: \"#53ad9d\",\n                                  error: \"#c43737\",            textDark: \"#000000\",            textLight: \"#FFFFFF\"        },        fonts: {            default: null,            \"'IBM Plex Sans', sans-serif\": {                url: \"https://fonts.googleapis.com/css?family=IBM+Plex+Sans\",                active: true            }        }    }}, (err, info) => {   if (!err) {         console.log(\"Upload Widget event - \", info);   }  }); }\n \n        return(\n            <div>\n                \n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}