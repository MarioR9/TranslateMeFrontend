{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/Profile.js\";\nimport React from 'react';\nimport { Dropzone } from 'react-dropzone';\nimport axios from 'axios';\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrop = files => {\n      // Push all the axios request promise into a single array\n      const uploaders = files.map(file => {\n        // Initial FormData\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"tags\", \"codeinfuse, medium, gist\");\n        formData.append(\"upload_preset\", \"pvhilzh7\"); // Replace the preset name with your own\n\n        formData.append(\"api_key\", \"1234567\"); // Replace API key with your own Cloudinary key\n\n        formData.append(\"timestamp\", Date.now() / 1000 | 0); // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\n\n        return axios.post(\"https://api.cloudinary.com/v1_1/codeinfuse/image/upload\", formData, {\n          headers: {\n            \"X-Requested-With\": \"XMLHttpRequest\"\n          }\n        }).then(response => {\n          const data = response.data;\n          const fileURL = data.secure_url; // You should store this URL for future references in your app\n\n          console.log(data);\n        });\n      }); // Once all the files are uploaded \n\n      axios.all(uploaders).then(() => {// ... perform after upload is successful operation\n      });\n    };\n\n    this.state = {\n      hightlight: false,\n      scores: [],\n      data: [],\n      selectedFile: null\n    };\n  }\n\n  // fetch=()=>{\n  //         fetch('http://localhost:3000/api/v1/users',{\n  //         method: \"POST\",\n  //         headers: {\"Content-type\": \"application/json\"},\n  //         body: JSON.stringify({\n  //             image: info.info.url\n  //             })\n  //         })\n  //         .then(res=>res.json()).then(data => {\n  //             // debugger\n  //         this.handleFetchResponse(data)})\n  //     }\n  //     handleFetchResponse=(data)=>{\n  //         console.log(data)\n  //         // debugger\n  //         this.setState({\n  //             scores: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9), //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n  //             data: data\n  //         })\n  //     }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.handleDrop,\n      multiple: true,\n      accept: \"image/*\" // style={styles.dropzone}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Drop your files or click here to upload\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/Profile.js"],"names":["React","Dropzone","axios","Profile","Component","constructor","props","handleDrop","files","uploaders","map","file","formData","FormData","append","Date","now","post","headers","then","response","data","fileURL","secure_url","console","log","all","state","hightlight","scores","selectedFile","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASfC,UATe,GASFC,KAAK,IAAI;AAClB;AACA,YAAMC,SAAS,GAAGD,KAAK,CAACE,GAAN,CAAUC,IAAI,IAAI;AAClC;AACA,cAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,IAAxB;AACAC,QAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB;AACAF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,UAAjC,EALkC,CAKY;;AAC9CF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,SAA3B,EANkC,CAMK;;AACvCF,QAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA8BC,IAAI,CAACC,GAAL,KAAa,IAAd,GAAsB,CAAnD,EAPkC,CASlC;;AACA,eAAOd,KAAK,CAACe,IAAN,CAAW,yDAAX,EAAsEL,QAAtE,EAAgF;AACrFM,UAAAA,OAAO,EAAE;AAAE,gCAAoB;AAAtB;AAD4E,SAAhF,EAEJC,IAFI,CAECC,QAAQ,IAAI;AAClB,gBAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,gBAAMC,OAAO,GAAGD,IAAI,CAACE,UAArB,CAFkB,CAEc;;AAChCC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACD,SANM,CAAP;AAOD,OAjBiB,CAAlB,CAFkB,CAqBlB;;AACAnB,MAAAA,KAAK,CAACwB,GAAN,CAAUjB,SAAV,EAAqBU,IAArB,CAA0B,MAAM,CAC9B;AACD,OAFD;AAGD,KAlCY;;AAEf,SAAKQ,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,MAAM,EAAC,EAFE;AAGTR,MAAAA,IAAI,EAAE,EAHG;AAITS,MAAAA,YAAY,EAAE;AAJL,KAAb;AAMH;;AA2BG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACIC,EAAAA,MAAM,GAAE;AAEZ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,MAAM,EAAE,KAAKxB,UADjB;AAEI,MAAA,QAAQ,MAFZ;AAGI,MAAA,MAAM,EAAC,SAHX,CAII;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDANJ,CADJ,CADJ;AAYH;;AAzE+C","sourcesContent":["import React from 'react'\nimport {Dropzone }from 'react-dropzone'\nimport axios from 'axios'\n\n\nexport default class Profile extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = { \n            hightlight: false,\n            scores:[],\n            data: [],\n            selectedFile: null\n        }\n    }\n        handleDrop = files => {\n            // Push all the axios request promise into a single array\n            const uploaders = files.map(file => {\n              // Initial FormData\n              const formData = new FormData();\n              formData.append(\"file\", file);\n              formData.append(\"tags\", `codeinfuse, medium, gist`);\n              formData.append(\"upload_preset\", \"pvhilzh7\"); // Replace the preset name with your own\n              formData.append(\"api_key\", \"1234567\"); // Replace API key with your own Cloudinary key\n              formData.append(\"timestamp\", (Date.now() / 1000) | 0);\n              \n              // Make an AJAX upload request using Axios (replace Cloudinary URL below with your own)\n              return axios.post(\"https://api.cloudinary.com/v1_1/codeinfuse/image/upload\", formData, {\n                headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n              }).then(response => {\n                const data = response.data;\n                const fileURL = data.secure_url // You should store this URL for future references in your app\n                console.log(data);\n              })\n            });\n          \n            // Once all the files are uploaded \n            axios.all(uploaders).then(() => {\n              // ... perform after upload is successful operation\n            });\n          }\n        // fetch=()=>{\n        //         fetch('http://localhost:3000/api/v1/users',{\n        //         method: \"POST\",\n        //         headers: {\"Content-type\": \"application/json\"},\n        //         body: JSON.stringify({\n        //             image: info.info.url\n        //             })\n        //         })\n        //         .then(res=>res.json()).then(data => {\n        //             // debugger\n        \n        //         this.handleFetchResponse(data)})\n        \n        //     }\n        //     handleFetchResponse=(data)=>{\n        //         console.log(data)\n        //         // debugger\n        //         this.setState({\n        //             scores: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9), //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n        //             data: data\n        //         })\n        \n        //     }\n            render(){\n\n        return(\n            <div>\n                <Dropzone \n                    onDrop={this.handleDrop} \n                    multiple \n                    accept=\"image/*\" \n                    // style={styles.dropzone}\n                    >\n                    <p>Drop your files or click here to upload</p>\n                </Dropzone>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}