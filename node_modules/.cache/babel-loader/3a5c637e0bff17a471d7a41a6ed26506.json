{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/AllCategories.js\";\nimport React from 'react';\nimport { Button, Dimmer, Header, Image, Card, Modal } from 'semantic-ui-react';\nlet languages = {\n  Afrikaans: \"af\",\n  Albanian: \"sq\",\n  Arabic: \"ar\",\n  Armenian: \"hy\",\n  Azerbaijani: \"az\",\n  Bashkir: \"ba\",\n  Basque: \"eu\",\n  Belarusian: \"be\",\n  Bengali: \"bn\",\n  Bosnian: \"bs\",\n  Bulgarian: \"bg\",\n  Central_Khmer: \"km\",\n  Chinese_Simplified: \"zh\",\n  Chinese_Traditional: \"TW\",\n  Chuvash: \"cv\",\n  Czech: \"cs\",\n  Danish: \"da\",\n  Dutch: \"nl\",\n  English: \"en\",\n  Esperanto: \"eo\",\n  Estonian: \"et\",\n  Finnish: \"fi\",\n  French: \"fr\",\n  Georgian: \"ka\",\n  German: \"de\",\n  Greek: \"el\",\n  Gujarati: \"gu\",\n  Haitian: \"ht\",\n  Hebrew: \"he\",\n  Hindi: \"hi\",\n  Hungarian: \"hu\",\n  Icelandic: \"is\",\n  Indonesian: \"id\",\n  Italian: \"it\",\n  Japanese: \"ja\",\n  Kazakh: \"kk\",\n  Kirghiz: \"ky\",\n  Korean: \"ko\",\n  Kurdish: \"ku\",\n  Latvian: \"lv\",\n  Lithuanian: \"lt\",\n  Malayalam: \"ml\",\n  Mongolian: \"mn\",\n  Norwegia_Bokmal: \"nb\",\n  Norwegian_Nynorsk: \"nn\",\n  Panjabi: \"pa\",\n  Persian: \"fa\",\n  Polish: \"pl\",\n  Portuguese: \"pt\",\n  Pushto: \"ps\",\n  Romanian: \"ro\",\n  Russian: \"ru\",\n  Slovakian: \"sk\",\n  Somali: \"so\",\n  Spanish: \"es\",\n  Swedish: \"sv\",\n  Tamil: \"ta\",\n  Telugu: \"te\",\n  Turkish: \"tr\",\n  Ukrainian: \"uk\",\n  Urdu: \"ur\",\n  Vietnamese: \"vi\"\n};\nexport default class AllCategory extends React.Component {\n  constructor() {\n    super();\n\n    this.show = dimmer => e => {\n      debugger;\n      this.setState({\n        dimmer,\n        open: true,\n        initialLanguage: e.target.parentElement.children[1].innerText,\n        category\n      });\n    };\n\n    this.close = () => this.setState({\n      open: false\n    });\n\n    this.handleDimmer = () => {\n      this.setState({\n        active: !this.state.active\n      });\n    };\n\n    this.state = {\n      active: false,\n      open: false,\n      initialLanguage: \"\",\n      categoryId: null\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          open = _this$state.open,\n          dimmer = _this$state.dimmer;\n    const active = this.state.active;\n    const content = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h2\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, this.props.category.title), React.createElement(Header, {\n      as: \"h2\",\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.props.category.language), React.createElement(Button, {\n      circular: true,\n      size: \"huge\",\n      onClick: this.show('blurring'),\n      primary: true,\n      icon: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(Button, {\n      circular: true,\n      size: \"huge\",\n      icon: \"heart outline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })); //   t.string :input\n    //   t.string :og_language\n    //   t.string :output\n    //   t.string :tr_language\n    //   t.integer :category_id\n    //   t.string :url\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      dimmer: dimmer,\n      open: open,\n      onClose: this.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Select a Photo\"), React.createElement(Modal.Content, {\n      image: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Image, {\n      wrapped: true,\n      size: \"medium\",\n      src: \"https://react.semantic-ui.com/images/avatar/large/rachel.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Modal.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Default Profile Image\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"We've found the following gravatar image associated with your e-mail address.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Is it okay to use this photo?\"))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"black\",\n      onClick: this.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Nope\"), React.createElement(Button, {\n      positive: true,\n      icon: \"checkmark\",\n      labelPosition: \"right\",\n      content: \"Create\",\n      onClick: this.close,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: this.props.category.id,\n      raised: true,\n      className: \"card\",\n      color: \"red\",\n      image: React.createElement(Dimmer.Dimmable, {\n        as: Image,\n        dimmed: active,\n        dimmer: {\n          active,\n          content\n        },\n        onMouseEnter: this.handleDimmer,\n        onMouseLeave: this.handleDimmer,\n        size: \"medium\",\n        src: this.props.category.url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/AllCategories.js"],"names":["React","Button","Dimmer","Header","Image","Card","Modal","languages","Afrikaans","Albanian","Arabic","Armenian","Azerbaijani","Bashkir","Basque","Belarusian","Bengali","Bosnian","Bulgarian","Central_Khmer","Chinese_Simplified","Chinese_Traditional","Chuvash","Czech","Danish","Dutch","English","Esperanto","Estonian","Finnish","French","Georgian","German","Greek","Gujarati","Haitian","Hebrew","Hindi","Hungarian","Icelandic","Indonesian","Italian","Japanese","Kazakh","Kirghiz","Korean","Kurdish","Latvian","Lithuanian","Malayalam","Mongolian","Norwegia_Bokmal","Norwegian_Nynorsk","Panjabi","Persian","Polish","Portuguese","Pushto","Romanian","Russian","Slovakian","Somali","Spanish","Swedish","Tamil","Telugu","Turkish","Ukrainian","Urdu","Vietnamese","AllCategory","Component","constructor","show","dimmer","e","setState","open","initialLanguage","target","parentElement","children","innerText","category","close","handleDimmer","active","state","categoryId","render","content","props","title","language","id","url"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Dimmer, Header, Image, Card, Modal } from 'semantic-ui-react'\n\nlet languages = {Afrikaans:\"af\",\n    Albanian:\"sq\",\n    Arabic:\"ar\",\n    Armenian:\"hy\",\n    Azerbaijani:\"az\",\n    Bashkir:\"ba\",\n    Basque:\"eu\",\n    Belarusian:\"be\",\n    Bengali:\"bn\",\n    Bosnian:\"bs\",\n    Bulgarian:\"bg\",\n    Central_Khmer:\"km\",\n    Chinese_Simplified:\"zh\",\n    Chinese_Traditional: \"TW\",\n    Chuvash: \"cv\",\n    Czech:\"cs\",\n    Danish:\"da\",\n    Dutch:\"nl\",\n    English:\"en\",\n    Esperanto:\"eo\",\n    Estonian:\"et\",\n    Finnish:\"fi\",\n    French:\"fr\",\n    Georgian:\"ka\",\n    German:\"de\",\n    Greek:\"el\",\n    Gujarati:\"gu\",\n    Haitian:\"ht\",\n    Hebrew:\"he\",\n    Hindi:\"hi\",\n    Hungarian:\"hu\",\n    Icelandic:\"is\",\n    Indonesian:\"id\",\n    Italian:\"it\",\n    Japanese:\"ja\",\n    Kazakh:\"kk\",\n    Kirghiz:\"ky\",\n    Korean:\"ko\",\n    Kurdish:\"ku\",\n    Latvian:\"lv\",\n    Lithuanian:\"lt\",\n    Malayalam:\"ml\",\n    Mongolian:\"mn\",\n    Norwegia_Bokmal:\"nb\",\n    Norwegian_Nynorsk:\"nn\",\n    Panjabi:\"pa\",\n    Persian:\"fa\",\n    Polish:\"pl\",\n    Portuguese:\"pt\",\n    Pushto:\"ps\",\n    Romanian:\"ro\",\n    Russian:\"ru\",\n    Slovakian:\"sk\",\n    Somali:\"so\",\n    Spanish:\"es\",\n    Swedish:\"sv\",\n    Tamil:\"ta\",\n    Telugu:\"te\",\n    Turkish:\"tr\",\n    Ukrainian:\"uk\",\n    Urdu:\"ur\",\n    Vietnamese:\"vi\"}\n\nexport default class AllCategory extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            active: false,\n            open: false,\n            initialLanguage: \"\",\n            categoryId: null\n\n        }\n    }\n    show = dimmer => (e) => {debugger\n        this.setState({ \n            dimmer, open: true,\n            initialLanguage: e.target.parentElement.children[1].innerText,\n            category\n        })}\n    close = () => this.setState({ open: false })\n\n\n    handleDimmer=()=>{\n        this.setState({\n            active: !this.state.active\n        })\n    }\n    render(){\n        const { open, dimmer } = this.state\n        const { active } = this.state\n        const content = (\n            <div>\n                <Header as='h2' inverted>\n                {this.props.category.title}\n                </Header>\n                <Header as='h2' inverted>\n                {this.props.category.language}\n                </Header>\n                <Button circular size='huge' onClick={this.show('blurring')} primary icon='plus' />\n                <Button circular size='huge' icon='heart outline' />\n            </div>\n             )\n\n\n\n\n\n    //   t.string :input\n    //   t.string :og_language\n    //   t.string :output\n    //   t.string :tr_language\n    //   t.integer :category_id\n    //   t.string :url\n\n    \n        return(\n            <div>\n                <div>\n                        <Modal dimmer={dimmer} open={open} onClose={this.close}>\n                        <Modal.Header>Select a Photo</Modal.Header>\n                        <Modal.Content image>\n                            <Image wrapped size='medium' src='https://react.semantic-ui.com/images/avatar/large/rachel.png' />\n                            <Modal.Description>\n                            <Header>Default Profile Image</Header>\n                            <p>We've found the following gravatar image associated with your e-mail address.</p>\n                            <p>Is it okay to use this photo?</p>\n                            </Modal.Description>\n                        </Modal.Content>\n                        <Modal.Actions>\n                            <Button color='black' onClick={this.close}>\n                            Nope\n                            </Button>\n                            <Button\n                            positive\n                            icon='checkmark'\n                            labelPosition='right'\n                            content=\"Create\"\n                            onClick={this.close}\n                            />\n                        </Modal.Actions>\n                        </Modal>\n                    </div>\n\n                <div>\n                    <Card id={this.props.category.id} raised className=\"card\" color='red' image={\n                    <Dimmer.Dimmable\n                        \n                        as={Image}\n                        dimmed={active}\n                        dimmer={{ active, content }}\n                        onMouseEnter={this.handleDimmer}\n                        onMouseLeave={this.handleDimmer}\n                        size='medium'\n                        src={this.props.category.url}\n                    />\n                    } >\n                \n                    </Card> \n                </div>\n        </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}