{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/TranslateMe/TranslateMeFrontend/src/components/Profile.js\";\nimport React from 'react';\nimport Images from './Images';\nimport { Card } from 'semantic-ui-react';\nimport { Image, CloudinaryContext } from 'cloudinary-react';\nimport Categories from './Categories';\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fileChangedHandler = event => {\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.uploadHandler = () => {\n      console.log(this.state.selectedFile);\n    };\n\n    this.fetch = () => {\n      fetch('http://localhost:3000/api/v1/users', {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          image: info.info.url\n        })\n      }).then(res => res.json()).then(data => {\n        // debugger\n        this.handleFetchResponse(data);\n      });\n    };\n\n    this.handleFetchResponse = data => {\n      console.log(data); // debugger\n\n      this.setState({\n        scores: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9),\n        //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n        data: data\n      });\n    };\n\n    this.state = {\n      hightlight: false,\n      scores: [],\n      data: [],\n      selectedFile: null\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.fileChangedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.uploadHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Upload!\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/TranslateMe/TranslateMeFrontend/src/components/Profile.js"],"names":["React","Images","Card","Image","CloudinaryContext","Categories","Profile","Component","constructor","props","fileChangedHandler","event","setState","selectedFile","target","files","uploadHandler","console","log","state","fetch","method","headers","body","JSON","stringify","image","info","url","then","res","json","data","handleFetchResponse","scores","result","images","classifiers","classes","filter","img","score","hightlight","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAAQC,KAAR,EAAcC,iBAAd,QAAsC,kBAAtC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,MAAMC,OAAN,SAAsBN,KAAK,CAACO,SAA5B,CAAqC;AAChDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYvBC,kBAZuB,GAYFC,KAAK,IAAI;AAC5B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,YAAY,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACD,KAdsB;;AAAA,SAgBvBC,aAhBuB,GAgBP,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWN,YAAvB;AACD,KAlBsB;;AAAA,SAmBvBO,KAnBuB,GAmBjB,MAAI;AACFA,MAAAA,KAAK,CAAC,oCAAD,EAAsC;AAC3CC,QAAAA,MAAM,EAAE,MADmC;AAE3CC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAFkC;AAG3CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,UAAAA,KAAK,EAAEC,IAAI,CAACA,IAAL,CAAUC;AADA,SAAf;AAHqC,OAAtC,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAPX,EAOuBF,IAPvB,CAO4BG,IAAI,IAAI;AAChC;AAEJ,aAAKC,mBAAL,CAAyBD,IAAzB;AAA+B,OAV/B;AAYH,KAhCkB;;AAAA,SAiCnBC,mBAjCmB,GAiCED,IAAD,IAAQ;AACxBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,IAAZ,EADwB,CAExB;;AACA,WAAKpB,QAAL,CAAc;AACVsB,QAAAA,MAAM,EAAEF,IAAI,CAACG,MAAL,CAAYC,MAAZ,CAAmB,CAAnB,EAAsBC,WAAtB,CAAkC,CAAlC,EAAqCC,OAArC,CAA6CC,MAA7C,CAAoDC,GAAG,IAAIA,GAAG,CAACC,KAAJ,GAAY,IAAZ,IAAoBD,GAAG,CAACC,KAAJ,GAAY,GAA3F,CADE;AAC+F;AACzGT,QAAAA,IAAI,EAAEA;AAFI,OAAd;AAKH,KAzCkB;;AAEf,SAAKb,KAAL,GAAa;AACTuB,MAAAA,UAAU,EAAE,KADH;AAETR,MAAAA,MAAM,EAAC,EAFE;AAGTF,MAAAA,IAAI,EAAE,EAHG;AAITnB,MAAAA,YAAY,EAAE;AAJL,KAAb;AAOH;;AAiCD8B,EAAAA,MAAM,GAAE;AAIJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKjC,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAEA;AAAQ,MAAA,OAAO,EAAE,KAAKM,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CADJ;AAMH;;AArD+C","sourcesContent":["import React from 'react'\nimport Images from './Images'\nimport { Card } from 'semantic-ui-react'\nimport {Image,CloudinaryContext} from 'cloudinary-react';\nimport Categories from './Categories';\n\nexport default class Profile extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = { \n            hightlight: false,\n            scores:[],\n            data: [],\n            selectedFile: null\n        }\n      \n    }\n\n\nfileChangedHandler = event => {\n  this.setState({ selectedFile: event.target.files[0] })\n}\n\nuploadHandler = () => {\n  console.log(this.state.selectedFile)\n}\nfetch=()=>{\n        fetch('http://localhost:3000/api/v1/users',{\n        method: \"POST\",\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({\n            image: info.info.url\n            })\n        })\n        .then(res=>res.json()).then(data => {\n            // debugger\n \n        this.handleFetchResponse(data)})\n  \n    }\n    handleFetchResponse=(data)=>{\n        console.log(data)\n        // debugger\n        this.setState({\n            scores: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9), //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n            data: data\n          })\n   \n    }\n    render(){\n\n       \n \n        return(\n            <div>\n               <input type=\"file\" onChange={this.fileChangedHandler}/>\n            <button onClick={this.uploadHandler}>Upload!</button>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}