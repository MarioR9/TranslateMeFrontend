{"ast":null,"code":"var _jsxFileName = \"/Users/macone/Development/TranslateMe/TranslateMeFrontend/src/components/Profile.js\";\nimport React from 'react';\nimport { Card, Button } from 'semantic-ui-react';\nimport Categories from './Categories';\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.handleFindUser();\n    };\n\n    this.handleFindUser = () => {\n      let newUser = this.props.allUsers.find(user => user.id === this.props.currentUser);\n      this.setState({\n        user: newUser\n      });\n    };\n\n    this.showUploadWidget = () => {\n      window.cloudinary.openUploadWidget({\n        cloudName: \"translateme\",\n        uploadPreset: \"qks45ycm\",\n        sources: [\"local\", \"dropbox\", \"camera\", \"facebook\", \"instagram\", \"url\"],\n        showAdvancedOptions: false,\n        cropping: true,\n        showCompletedButton: true,\n        autoUpload: false,\n        multiple: true,\n        showUploadMoreButton: false,\n        defaultSource: \"local\",\n        text: {\n          \"Skip\": {\n            \"title\": \"Upload\"\n          }\n        },\n        styles: {\n          palette: {\n            window: \"#F5F5F5\",\n            sourceBg: \"#FFFFFF\",\n            windowBorder: \"#90a0b3\",\n            tabIcon: \"#0094c7\",\n            inactiveTabIcon: \"#69778A\",\n            menuIcons: \"#0094C7\",\n            link: \"#53ad9d\",\n            action: \"#8F5DA5\",\n            inProgress: \"#0194c7\",\n            complete: \"#53ad9d\",\n            error: \"#c43737\",\n            textDark: \"#000000\",\n            textLight: \"#FFFFFF\"\n          },\n          fonts: {\n            default: null,\n            \"'IBM Plex Sans', sans-serif\": {\n              url: \"https://fonts.googleapis.com/css?family=IBM+Plex+Sans\",\n              active: true\n            }\n          }\n        }\n      }, (err, info) => {\n        if (!err) {\n          console.log(\"Upload Widget event - \", info);\n\n          if (info.event === \"success\") {\n            console.log(\"URL \" + info.info.url);\n            fetch('http://localhost:3000/api/v1/images', {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                image: info.info.url\n              })\n            }).then(res => res.json()).then(data => {\n              // debugger\n              this.handleFetchResponse(data);\n            });\n          }\n        }\n      });\n    };\n\n    this.handleFetchResponse = data => {\n      console.log(data);\n      this.setState({\n        scores: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9) //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n\n      });\n    };\n\n    this.state = {\n      hightlight: false,\n      scores: [],\n      user: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Button, {\n      circular: true,\n      size: \"medium\",\n      primary: true,\n      icon: \"plus\",\n      onClick: () => {\n        this.showUploadWidget();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Upload files\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/macone/Development/TranslateMe/TranslateMeFrontend/src/components/Profile.js"],"names":["React","Card","Button","Categories","Profile","Component","constructor","props","componentDidMount","handleFindUser","newUser","allUsers","find","user","id","currentUser","setState","showUploadWidget","window","cloudinary","openUploadWidget","cloudName","uploadPreset","sources","showAdvancedOptions","cropping","showCompletedButton","autoUpload","multiple","showUploadMoreButton","defaultSource","text","styles","palette","sourceBg","windowBorder","tabIcon","inactiveTabIcon","menuIcons","link","action","inProgress","complete","error","textDark","textLight","fonts","default","url","active","err","info","console","log","event","fetch","method","headers","body","JSON","stringify","image","then","res","json","data","handleFetchResponse","scores","result","images","classifiers","classes","filter","img","score","state","hightlight","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, Button } from 'semantic-ui-react'\nimport Categories from './Categories';\n\nexport default class Profile extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = { \n            hightlight: false,\n            scores:[],\n            user: []\n        }\n      \n    }\n    componentDidMount=()=>{\n        this.handleFindUser()\n    }\n    handleFindUser=()=>{\n       let newUser = this.props.allUsers.find(user => user.id === this.props.currentUser)\n        this.setState({\n            user: newUser\n        })\n    }\n            \n    showUploadWidget=()=> {\n    \n    window.cloudinary.openUploadWidget({\n       cloudName: \"translateme\",\n       uploadPreset: \"qks45ycm\",\n       sources: [\n           \"local\",\n           \"dropbox\",\n           \"camera\",\n           \"facebook\",\n           \"instagram\",\n           \"url\"\n       ],\n       showAdvancedOptions: false,\n       cropping: true,\n       showCompletedButton: true,\n       autoUpload: false, \n       multiple: true,\n       showUploadMoreButton: false,\n       defaultSource: \"local\",\n       text:{\n        \"Skip\": {\n            \"title\": \"Upload\"\n                }\n        },\n       styles: {\n           palette: {\n               window: \"#F5F5F5\",\n               sourceBg: \"#FFFFFF\",\n               windowBorder: \"#90a0b3\",\n               tabIcon: \"#0094c7\",\n               inactiveTabIcon: \"#69778A\",\n               menuIcons: \"#0094C7\",\n               link: \"#53ad9d\",\n               action: \"#8F5DA5\",\n               inProgress: \"#0194c7\",\n               complete: \"#53ad9d\",\n               error: \"#c43737\",\n               textDark: \"#000000\",\n               textLight: \"#FFFFFF\"\n           },\n           fonts: {\n               default: null,\n               \"'IBM Plex Sans', sans-serif\": {\n                   url: \"https://fonts.googleapis.com/css?family=IBM+Plex+Sans\",\n                   active: true\n               }\n           }\n           \n        }\n        \n    },\n   \n    (err, info) => {\n      if (!err) {   \n        \n        console.log(\"Upload Widget event - \", info);\n        if(info.event === \"success\"){\n            console.log(\"URL \" + info.info.url)\n        fetch('http://localhost:3000/api/v1/images',{\n        method: \"POST\",\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({\n            image: info.info.url\n            })\n        })\n        .then(res=>res.json()).then(data => {\n            // debugger\n \n        this.handleFetchResponse(data)})\n        }\n\n            }\n        });\n     \n    }\n    handleFetchResponse=(data)=>{\n        console.log(data)\n        this.setState({\n            scores: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9), //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n          })\n    }\n\n\n    render(){\n\n       \n \n        return(\n            <div >\n                    <Card.Group>\n                        <Button circular size='medium' primary icon='plus' onClick={()=>{this.showUploadWidget()}}>Upload files</Button>\n                        {/* {this.state.user.categories.map(cate => <Categories cate={cate}/>)} */}\n                    </Card.Group>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}