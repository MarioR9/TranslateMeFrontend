{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/Profile.js\";\nimport React from 'react';\nimport Images from './Images';\nimport { Card } from 'semantic-ui-react';\nimport { Image, Video, Transformation, CloudinaryContext } from 'cloudinary-react';\nexport default class Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFetchResponse = data => {\n      console.log(data);\n      debugger;\n      this.setState({\n        data: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9),\n        //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n        image: data\n      }); // var imageData = new FormData()\n      // for (const file of evt.target.files) {\n      //     imageData.append('files',file,file.name)\n      // }\n    };\n  }\n\n  onFilesAdded(evt) {\n    let img = evt.target.files;\n    var imageData = new FormData();\n\n    for (const file of evt.target.files) {\n      imageData.append('files', file, file.name);\n    } // if (this.props.disabled) return\n    // const files = evt.target.files\n    // if (this.props.onFilesAdded) {\n    //   const array = this.fileListToArray(files)\n    //   this.props.onFilesAdded(array)\n    // }\n\n\n    fetch('http://localhost:3000/api/v1/users', {\n      method: \"POST\",\n      body: imageData\n    }).then(res => res.json()).then(data => {\n      //   debugger\n      this.handleFetchResponse(data);\n    });\n  }\n\n  onDragOver(evt) {\n    evt.preventDefault();\n    if (this.props.disabled) return;\n    this.setState({\n      hightlight: true\n    });\n  }\n\n  onDragLeave() {\n    this.setState({\n      hightlight: false\n    });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabled) return;\n    const files = event.dataTransfer.files;\n\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n\n    this.setState({\n      hightlight: false\n    });\n  }\n\n  fileListToArray(list) {\n    const array = [];\n\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n\n    return array;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Dropzone \".concat(this.state.hightlight ? \"Highlight\" : \"\"),\n      onDragOver: this.onDragOver,\n      onDragLeave: this.onDragLeave,\n      onDrop: this.onDrop,\n      onClick: this.openFileDialog,\n      style: {\n        cursor: this.props.disabled ? \"default\" : \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: this.fileInputRef,\n      className: \"FileInput\",\n      type: \"file\",\n      multiple: true,\n      onChange: this.onFilesAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      alt: \"upload\",\n      className: \"Icon\",\n      src: \"upload-icon-3.png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Upload Files\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Card.Group, {\n      itemsPerRow: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.data.map(image => React.createElement(Images, {\n      pic: this.state.image,\n      image: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/Profile.js"],"names":["React","Images","Card","Image","Video","Transformation","CloudinaryContext","Profile","Component","handleFetchResponse","data","console","log","setState","result","images","classifiers","classes","filter","img","score","image","onFilesAdded","evt","target","files","imageData","FormData","file","append","name","fetch","method","body","then","res","json","onDragOver","preventDefault","props","disabled","hightlight","onDragLeave","onDrop","event","dataTransfer","array","fileListToArray","list","i","length","push","item","render","state","openFileDialog","cursor","fileInputRef","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Images from './Images'\nimport { Card } from 'semantic-ui-react'\nimport {Image, Video, Transformation, CloudinaryContext} from 'cloudinary-react';\n\nexport default class Profile extends React.Component{\n   \n      onFilesAdded(evt) {\n        let img = evt.target.files\n        var imageData = new FormData()\n       \n        for (const file of evt.target.files) {\n            imageData.append('files',file,file.name)\n        }\n       \n        \n        // if (this.props.disabled) return\n        // const files = evt.target.files\n        // if (this.props.onFilesAdded) {\n        //   const array = this.fileListToArray(files)\n        //   this.props.onFilesAdded(array)\n        // }\n        fetch('http://localhost:3000/api/v1/users',{\n            method: \"POST\",\n            body: imageData\n           \t}).then(res=>res.json()).then(data => {\n//   debugger\n                this.handleFetchResponse(data)})\n            \n        }\n    \n      handleFetchResponse=(data)=>{\n          console.log(data)\n          debugger\n          this.setState({\n              data: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9), //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n              image: data\n            })\n        // var imageData = new FormData()\n       \n        // for (const file of evt.target.files) {\n        //     imageData.append('files',file,file.name)\n        // }\n       \n\n      }  \n\n\n      onDragOver(evt) {\n        evt.preventDefault()\n    \n        if (this.props.disabled) return\n    \n        this.setState({ hightlight: true })\n      }\n    \n      onDragLeave() {\n         \n        this.setState({ hightlight: false })\n      }\n    \n      onDrop(event) {\n        event.preventDefault()\n    \n        if (this.props.disabled) return\n    \n        const files = event.dataTransfer.files\n        if (this.props.onFilesAdded) {\n          const array = this.fileListToArray(files)\n          this.props.onFilesAdded(array)\n        }\n        this.setState({ hightlight: false })\n      }\n    \n      fileListToArray(list) {\n        const array = []\n        for (var i = 0; i < list.length; i++) {\n          array.push(list.item(i))\n        }\n \n        return array\n      }\n\n\n    render(){\n        return(\n            <div>\n                <div\n                \n                className={`Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\n                onDragOver={this.onDragOver}\n                onDragLeave={this.onDragLeave}\n                onDrop={this.onDrop}\n                onClick={this.openFileDialog}\n                style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\n                >\n                <input\n                ref={this.fileInputRef}\n                className=\"FileInput\"\n                type=\"file\"\n                multiple\n                onChange={this.onFilesAdded}\n                />\n                <img\n                alt=\"upload\"\n                className=\"Icon\"\n                src=\"upload-icon-3.png\"\n                />\n                <span>Upload Files</span>\n                \n            </div>\n            <div >\n                    <Card.Group itemsPerRow={6}>\n                       {this.state.data.map(image => <Images pic={this.state.image} image={image}/>)}\n                       \n                    </Card.Group>\n                </div>\n        </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}