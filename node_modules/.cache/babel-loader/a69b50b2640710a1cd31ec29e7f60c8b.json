{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/Profile.js\";\nimport React from 'react';\nimport Images from './Images';\nimport { Button, Dimmer, Header, Image, Card } from 'semantic-ui-react'; // import {Image,CloudinaryContext} from 'cloudinary-react';\n\nimport Categories from './Categories';\nexport default class Profile extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDimmer = () => {\n      this.setState({\n        active: !this.state.active\n      });\n    };\n\n    this.showUploadWidget = () => {\n      window.cloudinary.openUploadWidget({\n        cloudName: \"translateme\",\n        uploadPreset: \"qks45ycm\",\n        sources: [\"local\", \"dropbox\", \"camera\", \"facebook\", \"instagram\", \"url\"],\n        showAdvancedOptions: false,\n        cropping: false,\n        multiple: false,\n        defaultSource: \"local\",\n        styles: {\n          palette: {\n            window: \"#F5F5F5\",\n            sourceBg: \"#FFFFFF\",\n            windowBorder: \"#90a0b3\",\n            tabIcon: \"#0094c7\",\n            inactiveTabIcon: \"#69778A\",\n            menuIcons: \"#0094C7\",\n            link: \"#53ad9d\",\n            action: \"#8F5DA5\",\n            inProgress: \"#0194c7\",\n            complete: \"#53ad9d\",\n            error: \"#c43737\",\n            textDark: \"#000000\",\n            textLight: \"#FFFFFF\"\n          },\n          fonts: {\n            default: null,\n            \"'IBM Plex Sans', sans-serif\": {\n              url: \"https://fonts.googleapis.com/css?family=IBM+Plex+Sans\",\n              active: true\n            }\n          }\n        }\n      }, (err, info) => {\n        if (!err) {\n          console.log(\"Upload Widget event - \", info);\n\n          if (info.event === \"success\") {\n            console.log(\"URL \" + info.info.url);\n            fetch('http://localhost:3000/api/v1/users', {\n              method: \"POST\",\n              headers: {\n                \"Content-type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                image: info.info.url\n              })\n            }).then(res => res.json()).then(data => {\n              debugger;\n              this.handleFetchResponse(data);\n            });\n          }\n        }\n      });\n    };\n\n    this.handleFetchResponse = data => {\n      console.log(data);\n      debugger;\n      this.setState({\n        scores: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9),\n        //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n        data: data\n      });\n    };\n\n    this.state = {\n      hightlight: false,\n      scores: [],\n      data: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Card, {\n      id: \"upload_widget\",\n      onClick: () => {\n        this.showUploadWidget();\n      },\n      class: \"cloudinary-button\",\n      image: React.createElement(Dimmer.Dimmable, {\n        as: Image,\n        dimmed: active,\n        dimmer: {\n          active,\n          content\n        },\n        onMouseEnter: this.handleDimmer,\n        onMouseLeave: this.handleDimmer,\n        size: \"medium\",\n        src: \"apple.jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Upload files\"), React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Categories, {\n      image: this.state.data,\n      scores: this.state.scores,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/flatironschool/Development/MOD5/TranslateMe/TranslateMeFrontend/src/components/Profile.js"],"names":["React","Images","Button","Dimmer","Header","Image","Card","Categories","Profile","Component","constructor","props","handleDimmer","setState","active","state","showUploadWidget","window","cloudinary","openUploadWidget","cloudName","uploadPreset","sources","showAdvancedOptions","cropping","multiple","defaultSource","styles","palette","sourceBg","windowBorder","tabIcon","inactiveTabIcon","menuIcons","link","action","inProgress","complete","error","textDark","textLight","fonts","default","url","err","info","console","log","event","fetch","method","headers","body","JSON","stringify","image","then","res","json","data","handleFetchResponse","scores","result","images","classifiers","classes","filter","img","score","hightlight","render","content"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Images from './Images'\nimport { Button, Dimmer, Header, Image, Card } from 'semantic-ui-react'\n\n// import {Image,CloudinaryContext} from 'cloudinary-react';\nimport Categories from './Categories';\n\nexport default class Profile extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state = { \n            hightlight: false,\n            scores:[],\n            data: []\n        }\n      \n    }\n    handleDimmer=()=>{\n        this.setState({\n            active: !this.state.active\n        })\n    }\n            \nshowUploadWidget=()=> {\n    window.cloudinary.openUploadWidget({\n       cloudName: \"translateme\",\n       uploadPreset: \"qks45ycm\",\n       sources: [\n           \"local\",\n           \"dropbox\",\n           \"camera\",\n           \"facebook\",\n           \"instagram\",\n           \"url\"\n       ],\n       showAdvancedOptions: false,\n       cropping: false,\n       multiple: false,\n       defaultSource: \"local\",\n       styles: {\n           palette: {\n               window: \"#F5F5F5\",\n               sourceBg: \"#FFFFFF\",\n               windowBorder: \"#90a0b3\",\n               tabIcon: \"#0094c7\",\n               inactiveTabIcon: \"#69778A\",\n               menuIcons: \"#0094C7\",\n               link: \"#53ad9d\",\n               action: \"#8F5DA5\",\n               inProgress: \"#0194c7\",\n               complete: \"#53ad9d\",\n               error: \"#c43737\",\n               textDark: \"#000000\",\n               textLight: \"#FFFFFF\"\n           },\n           fonts: {\n               default: null,\n               \"'IBM Plex Sans', sans-serif\": {\n                   url: \"https://fonts.googleapis.com/css?family=IBM+Plex+Sans\",\n                   active: true\n               }\n           }\n       }\n       \n   },\n   \n    (err, info) => {\n      if (!err) {   \n        \n        console.log(\"Upload Widget event - \", info);\n        if(info.event === \"success\"){\n            console.log(\"URL \" + info.info.url)\n        fetch('http://localhost:3000/api/v1/users',{\n        method: \"POST\",\n        headers: {\"Content-type\": \"application/json\"},\n        body: JSON.stringify({\n            image: info.info.url\n            })\n        })\n        .then(res=>res.json()).then(data => {\n            debugger\n \n        this.handleFetchResponse(data)})\n        }\n\n      }\n     });\n     \n    }\n    handleFetchResponse=(data)=>{\n        console.log(data)\n        debugger\n        this.setState({\n            scores: data.result.images[0].classifiers[0].classes.filter(img => img.score < 1.00 && img.score > 0.9), //.sort((a, b) => (a.score < b.score) ? 1 : -1)\n            data: data\n          })\n   \n    }\n    render(){\n\n       \n \n        return(\n            <div>\n                 \n            \n                <Card id=\"upload_widget\" onClick={()=>{this.showUploadWidget()}} class=\"cloudinary-button\" image={\n            <Dimmer.Dimmable\n                \n                as={Image}\n                dimmed={active}\n                dimmer={{ active, content }}\n                onMouseEnter={this.handleDimmer}\n                onMouseLeave={this.handleDimmer}\n                size='medium'\n                src='apple.jpg'\n            />\n        }>Upload files</Card>\n\n                <Card.Group>\n                    <Categories image={this.state.data} scores={this.state.scores}/>\n                </Card.Group>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}